{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js","components/OrdersTable/TableRow/TableRow.js","components/OrdersTable/OrdersTable.js","containers/YourOrders/YourOrders.js"],"names":["TableBody","props","children","className","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","handledProps","defaultProps","as","propTypes","TableCell","active","collapsing","content","disabled","error","icon","negative","positive","selectable","singleLine","textAlign","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","isNil","Icon","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","Table","attached","basic","celled","color","columns","compact","definition","fixed","footerRow","headerRow","headerRows","inverted","padded","renderBodyRow","size","sortable","stackable","striped","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","data","index","Body","Cell","Footer","Header","HeaderCell","Row","date","List","toppings","map","topping","Item","name","count","id","price","toFixed","OrdersTable","orders","order","chosenToppings","totalPrice","YourOrders","auth","useContext","AuthContext","useState","pastOrdersState","setPastOrdersState","errorMessage","errorState","setErrorState","isLoading","ordersLoaded","loadFailed","loadingState","setLoadingState","useEffect","path","userId","axios","get","headers","Authorization","token","then","response","catch","message","ErrorModal","onClear","Loader","length"],"mappings":"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","file":"static/js/9.df4d7b8a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided each row into separate cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;","import React from \"react\";\r\nimport { Table, List } from \"semantic-ui-react\";\r\n\r\nconst TableRow = (props) => {\r\n  return (\r\n    <Table.Row verticalAlign=\"top\">\r\n      <Table.Cell>{props.date}</Table.Cell>\r\n      <Table.Cell>\r\n        <List>\r\n          {props.toppings.map((topping) => {\r\n            return (\r\n              <List.Item key={topping.id}>\r\n                {topping.name} : {topping.count}\r\n              </List.Item>\r\n            );\r\n          })}\r\n        </List>\r\n      </Table.Cell>\r\n      <Table.Cell>&euro;{props.price.toFixed(2)}</Table.Cell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport TableRow from \"./TableRow/TableRow\";\r\n\r\nconst OrdersTable = (props) => {\r\n  return (\r\n    <Table>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell width={4}>Order Date</Table.HeaderCell>\r\n          <Table.HeaderCell width={8}>Pizza Description</Table.HeaderCell>\r\n          <Table.HeaderCell width={4}>Price</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {props.orders.map((order) => {\r\n          return (\r\n            <TableRow\r\n              key={order.id}\r\n              toppings={order.chosenToppings}\r\n              price={order.totalPrice}\r\n              date={order.date}\r\n            />\r\n          );\r\n        })}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default OrdersTable;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nimport OrdersTable from \"../../components/OrdersTable/OrdersTable\";\r\nimport Loader from \"../../components/Feedback/Loader/Loader\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst YourOrders = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // ORDER, ERROR AND LOADING STATE\r\n\r\n  const [pastOrdersState, setPastOrdersState] = useState({\r\n    orders: [],\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [loadingState, setLoadingState] = useState({\r\n    isLoading: true,\r\n    ordersLoaded: false,\r\n    loadFailed: false,\r\n  });\r\n\r\n  // FETCH ORDERS\r\n  \r\n  useEffect(() => {\r\n\r\n    let uid = auth.userId;\r\n    let path = \"/orders/\" + uid;\r\n    axios\r\n      .get(path, { headers: { Authorization: \"Bearer \" + auth.token }})\r\n      .then((response) => {\r\n        setPastOrdersState({ orders: response.data.orders });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          ordersLoaded: true,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setErrorState({\r\n          error: true,\r\n          errorMessage: error.response.data.message,\r\n        });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          ordersLoaded: loadingState.ordersLoaded,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // ERROR HANDLER\r\n\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n    setLoadingState({\r\n      isLoading: loadingState.isLoading,\r\n      ordersLoaded: loadingState.ordersLoaded,\r\n      loadFailed: true,\r\n    });\r\n  };\r\n\r\n  // DISPLAY ORDERS\r\n\r\n  let orders = errorState.error ? (\r\n    <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n  ) : (\r\n    <Loader active={loadingState.isLoading} />\r\n  );\r\n\r\n  if (loadingState.ordersLoaded && pastOrdersState.orders.length > 0) {\r\n    orders = <OrdersTable orders={pastOrdersState.orders} />;\r\n  } else if (loadingState.loadFailed) {\r\n    orders = <p>We can't load your orders... maybe try creating one?</p>;\r\n  }\r\n\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nexport default YourOrders;\r\n"],"sourceRoot":""}