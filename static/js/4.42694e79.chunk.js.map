{"version":3,"sources":["../node_modules/lodash-es/_baseHas.js","../node_modules/lodash-es/has.js","../node_modules/semantic-ui-react/dist/es/addons/Confirm/Confirm.js","containers/YourAccount/YourAccount.js"],"names":["hasOwnProperty","Object","prototype","baseHas","object","key","call","has","path","hasPath","Confirm","_Component","_this","_len","arguments","length","args","Array","_key","apply","this","concat","handleCancel","e","_invoke","props","handleCancelOverrides","predefinedProps","onClick","buttonProps","handleConfirmOverrides","_inheritsLoose","render","_this$props","cancelButton","confirmButton","content","header","open","size","rest","getUnhandledProps","openProp","_has","React","createElement","Modal","_extends","onClose","Header","create","autoGenerateKey","Content","Actions","Button","overrideProps","defaultProps","primary","Component","handledProps","propTypes","YourAccount","auth","useContext","AuthContext","useState","user","accountState","setAccountState","error","errorMessage","errorState","setErrorState","isLoading","loadFailed","loadingState","setLoadingState","confirmState","setConfirmState","useEffect","userId","axios","get","headers","Authorization","token","then","response","data","catch","message","account","ErrorModal","onClear","Loader","active","Grid","Row","centered","Column","width","Segment","color","divided","as","textAlign","List","Item","Icon","name","email","className","icon","labelPosition","history","push","pathname","state","onCancel","onConfirm","delete","console","log","logout","errorMsg","Image","src","rounded","Fragment"],"mappings":"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","file":"static/js/4.42694e79.chunk.js","sourcesContent":["/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _has from \"lodash-es/has\";\nimport _invoke from \"lodash-es/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { customPropTypes, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\nimport Modal from '../../modules/Modal';\n/**\n * A Confirm modal gives the user a choice to confirm or cancel an action/\n * @see Modal\n */\n\nvar Confirm = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Confirm, _Component);\n\n  function Confirm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleCancel = function (e) {\n      _invoke(_this.props, 'onCancel', e, _this.props);\n    };\n\n    _this.handleCancelOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _this.handleCancel(e);\n        }\n      };\n    };\n\n    _this.handleConfirmOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(_this.props, 'onConfirm', e, _this.props);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = Confirm.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        cancelButton = _this$props.cancelButton,\n        confirmButton = _this$props.confirmButton,\n        content = _this$props.content,\n        header = _this$props.header,\n        open = _this$props.open,\n        size = _this$props.size;\n    var rest = getUnhandledProps(Confirm, this.props); // `open` is auto controlled by the Modal\n    // It cannot be present (even undefined) with `defaultOpen`\n    // only apply it if the user provided an open prop\n\n    var openProp = {};\n    if (_has(this.props, 'open')) openProp.open = open;\n    return /*#__PURE__*/React.createElement(Modal, _extends({}, rest, openProp, {\n      size: size,\n      onClose: this.handleCancel\n    }), Modal.Header.create(header, {\n      autoGenerateKey: false\n    }), Modal.Content.create(content, {\n      autoGenerateKey: false\n    }), /*#__PURE__*/React.createElement(Modal.Actions, null, Button.create(cancelButton, {\n      autoGenerateKey: false,\n      overrideProps: this.handleCancelOverrides\n    }), Button.create(confirmButton, {\n      autoGenerateKey: false,\n      defaultProps: {\n        primary: true\n      },\n      overrideProps: this.handleConfirmOverrides\n    })));\n  };\n\n  return Confirm;\n}(Component);\n\nConfirm.handledProps = [\"cancelButton\", \"confirmButton\", \"content\", \"header\", \"onCancel\", \"onConfirm\", \"open\", \"size\"];\nConfirm.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** The cancel button text. */\n  cancelButton: customPropTypes.itemShorthand,\n\n  /** The OK button text. */\n  confirmButton: customPropTypes.itemShorthand,\n\n  /** The ModalContent text. */\n  content: customPropTypes.itemShorthand,\n\n  /** The ModalHeader text. */\n  header: customPropTypes.itemShorthand,\n\n  /**\n   * Called when the Modal is closed without clicking confirm.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * Called when the OK button is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onConfirm: PropTypes.func,\n\n  /** Whether or not the modal is visible. */\n  open: PropTypes.bool,\n\n  /** A Confirm can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen'])\n} : {};\nConfirm.defaultProps = {\n  cancelButton: 'Cancel',\n  confirmButton: 'OK',\n  content: 'Are you sure?',\n  size: 'small'\n};\nexport default Confirm;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Grid, Header, Segment, List, Image, Button, Icon, Confirm } from \"semantic-ui-react\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nimport Loader from \"../../components/Feedback/Loader/Loader\";\r\nimport ErrorModal from \"../../components/Feedback/ErrorModal/ErrorModal\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nconst YourAccount = (props) => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // ACCOUNT, ERROR AND LOADING STATE\r\n  const [accountState, setAccountState] = useState({\r\n    user: null,\r\n  });\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    error: false,\r\n    errorMessage: null,\r\n  });\r\n\r\n  const [loadingState, setLoadingState] = useState({\r\n    isLoading: true,\r\n    loadFailed: false,\r\n  });\r\n\r\n  // Manage state of confirm deletion dialog\r\n  const [confirmState, setConfirmState] = useState({ open: false });\r\n  const open = () => setConfirmState({ open: true });\r\n  const close = () => setConfirmState({ open: false });\r\n\r\n  // FETCH ACCOUNT DETAILS\r\n  useEffect(() => {\r\n    let uid = auth.userId; \r\n    let path = \"/users/\" + uid;\r\n    axios\r\n      .get(path, { headers: { Authorization: \"Bearer \" + auth.token } })\r\n      .then((response) => {\r\n        setAccountState({ user: response.data.user });\r\n      })\r\n      .catch((error) => {\r\n        setErrorState({\r\n          error: true,\r\n          errorMessage: error.response.data.message,\r\n        });\r\n        setLoadingState({\r\n          isLoading: false,\r\n          loadFailed: loadingState.loadFailed,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  // UPDATE AND DELETE HANDLERS\r\n  const updateHandler = () => {\r\n    props.history.push({\r\n      pathname: \"/update-account\",\r\n      state: {\r\n        user: accountState.user,\r\n      },\r\n    });\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    let uid = auth.userId;\r\n    let path = \"/deleteuser/\" + uid;\r\n    axios\r\n      .delete(path, { headers: { Authorization: \"Bearer \" + auth.token } })\r\n      .then((response) => {\r\n        console.log(\"User deleted!\");\r\n        auth.logout();\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorMsg = \"\";\r\n        if (error.response) {\r\n          errorMsg = error.response.data.message;\r\n        } else {\r\n          errorMsg = \"There was a problem deleting your account\";\r\n        }\r\n        setErrorState({ error: true, errorMessage: errorMsg });\r\n      });\r\n  };\r\n\r\n  // ERROR HANDLER\r\n  const errorHandler = () => {\r\n    setErrorState({\r\n      error: false,\r\n      errorMessage: null,\r\n    });\r\n    setLoadingState({\r\n      isLoading: false,\r\n      loadFailed: true,\r\n    });\r\n  };\r\n\r\n  // DISPLAY ACCOUNT\r\n  let account = errorState.error ? (\r\n    <ErrorModal error={errorState.errorMessage} onClear={errorHandler} />\r\n  ) : (\r\n    <Loader active={loadingState.isLoading} />\r\n  );\r\n\r\n  if (accountState.user && !errorState.error) {\r\n    account = (\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={10}>\r\n            <Segment color=\"red\">\r\n              <Grid divided>\r\n                <Grid.Column width={8}>\r\n                  <Header as=\"h3\" textAlign=\"center\" color=\"red\">\r\n                    Your Details\r\n                  </Header>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"user\" />\r\n                      <List.Content>\r\n                        <b>Name: {accountState.user.name} </b>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"mail\" />\r\n                      <List.Content>\r\n                        <b>Email: {accountState.user.email} </b>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"lock\" />\r\n                      <List.Content>\r\n                        <b>Password: </b>{\" \"}\r\n                        &#9642;&#9642;&#9642;&#9642;&#9642;&#9642;{\" \"}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  </List>\r\n                  <div className=\"accountButtons\">\r\n                    <Button\r\n                      icon\r\n                      labelPosition=\"left\"\r\n                      color=\"orange\"\r\n                      onClick={updateHandler}\r\n                    >\r\n                      <Icon name=\"pencil\" />\r\n                      Update Your Details\r\n                    </Button>\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                      icon\r\n                      labelPosition=\"left\"\r\n                      color=\"red\"\r\n                      onClick={open}\r\n                    >\r\n                      Delete Your Account\r\n                      <Icon name=\"trash\" />\r\n                    </Button>\r\n                    <Confirm\r\n                      open={confirmState.open}\r\n                      onCancel={close}\r\n                      onConfirm={deleteHandler}\r\n                      header=\"Are you sure?\"\r\n                      content=\"Deleting your account is a permanent action and cannot be undone\"\r\n                      cancelButton=\"Take me back\"\r\n                      confirmButton=\"Yes, delete my account permanently\"\r\n                    />\r\n                  </div>\r\n                </Grid.Column>\r\n                <Grid.Column width={8} textAlign=\"center\">\r\n                  <Image\r\n                    src=\"https://img.jamieoliver.com/jamieoliver/recipe-database/oldImages/large/1474_2_1430128688.jpg?tr=w-800,h-1066\"\r\n                    rounded\r\n                    size=\"large\"\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  } else if (loadingState.loadFailed) {\r\n    account = <p>User can't be found</p>;\r\n  }\r\n\r\n  return <React.Fragment>{account}</React.Fragment>;\r\n};\r\n\r\nexport default YourAccount;\r\n"],"sourceRoot":""}